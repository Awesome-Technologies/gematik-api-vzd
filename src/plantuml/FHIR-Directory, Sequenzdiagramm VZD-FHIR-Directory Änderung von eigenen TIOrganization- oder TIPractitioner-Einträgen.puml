@startuml
skinparam dpi 100
skinparam WrapWidth 200
skinparam monochrome true

'title "FHIR-Directory, Sequenzdiagram Änderung von eigenen TIOrganization- oder TIPractitioner-Einträgen'
actor oa as "Admin_Owner"
participant cl as "Org-Admin-Client\noder\nTI-Messenger-Client"
participant aa as "Authenticator App\ndes IDP"
participant fp as "FHIR-Proxy"
participant idp as "Identity Provider"
participant fd as "FHIR-Directory"
oa -> cl: möchte seinen FHIR-Eintrag\nändern
activate cl
cl -> cl: prüfe ob noch gültiges Accesstoken\nfür Schreibzugriff vom FHIR-Proxy vorliegt
alt kein gültiges Accesstoken für Schreibzugriff vorhanden
cl -> cl: Erzeuge PKCE Code für verifier und challenge
cl -> idp: GET /authorize + scope=VZD-FHIR-Directory + openid + code_challenge
activate idp
idp --> cl: HTTP 200 OK (Result Body "Bestätige Identität in der Authenticator App des IDP")
oa -> aa: Authentisierung und\nEinverständnis
activate aa
aa -> idp: Authentisierung und Einverständnis
deactivate aa
idp --> cl: HTTP 200 OK (Result Body {"AuthorizationCode"})

cl -> idp: POST /token\ngrant_type=authorization_code\ncode="AuthorizationCode"\ncode_verifier="verifier"
idp -> idp: Auswertung des PKCE codes
idp --> cl: HTTP 200 OK (Result Body {\n"id_token": "idtoken"\n"access_token": "accesstoken"\n"refresh_token": "refreshtoken"...})
deactivate idp
cl -> fp: GET /owner-authenticate... (Auth Header mit\naccesstoken und idtoken)
activate fp
fp -> fp: Prüfe accesstoken und idtoken
fp -> fp: erzeuge Accesstoken für Schreibzugriff des TI-Messenger-Clients
fp --> cl: HTTP 200 OK, Result body\n{"access_token"="accesstoken",\n"token_type":"bearer",\n"expires_in":86400}
end
cl -> fp: GET /owner/TIOrganization?id=telematikID\nAuthorization Bearer accesstoken
fp -> fp: prüfe accesstoken
fp -> fd: GET /TIOrganization?id=telematikID
activate fd
fd --> fp: HTTP 200 OK (Result Body json)
fp --> cl: HTTP 200 OK (Result Body json)
group optional FHIR Operationen
oa -> cl: Nutzereingabe
cl -> fp: Request
fp -> fd: Request
fd --> fp: Response
fp --> cl: Response
end
deactivate fd
deactivate fp
deactivate cl
@enduml
