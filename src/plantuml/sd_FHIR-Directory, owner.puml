@startuml
skinparam dpi 100
skinparam WrapWidth 200
skinparam monochrome true

'title "FHIR-Directory, Sequenzdiagram Änderung von eigenen TIOrganization- oder TIPractitioner-Einträgen'
actor oa as "Admin_Owner"
participant cl as "Org-Admin-Client\noder\nTI-Messenger-Client"
participant aa as "Authenticator App\ndes IDP"
participant au as "Auth-Service"
participant fp as "FHIR-Proxy"
participant idp as "Identity Provider"
participant fd as "FHIR-Directory"
oa -> cl: möchte seinen FHIR-Eintrag\nändern
activate cl
cl -> cl: prüfe ob noch gültiges owner-accesstoken\nfür Schreibzugriff vom Auth-Service vorliegt
alt kein gültiges owner-accesstoken für Schreibzugriff vorhanden
cl -> cl: Erzeuge PKCE Code für verifier und challenge
cl -> au: GET /owner-authenticate
activate au
au --> cl: Redirect to IDP Authorization Endpoint
cl -> idp: GET /authorize
idp --> cl: Authentication challenge
activate aa
aa -> aa: Authentication
aa --> idp: Authentication challenge response
deactivate aa
activate idp
idp --> cl: Authorization Response with Authorization code
cl -> au: GET /owner-authenticate with Authorization code
au -> idp: POST /tokenEndpoint {authorization code}
idp --> au: Response {id_token}

'cl -> idp: GET /authorize + scope=VZD-FHIR-Directory + openid + code_challenge
'activate idp
'idp --> cl: HTTP 200 OK (Result Body "Bestätige Identität in der Authenticator App des IDP")
'oa -> aa: Authentisierung und\nEinverständnis
'activate aa
'aa -> idp: Authentisierung und Einverständnis
'deactivate aa
'idp --> cl: HTTP 200 OK (Result Body {"AuthorizationCode"})

'cl -> idp: POST /token\ngrant_type=authorization_code\ncode="AuthorizationCode"\ncode_verifier="verifier"
'idp -> idp: Auswertung des PKCE codes
'idp --> cl: HTTP 200 OK (Result Body {\n"id_token": "idtoken"\n"access_token": "accesstoken"\n"refresh_token": "refreshtoken"...})
deactivate idp
'cl -> fp: GET /owner-authenticate... (Auth Header mit\naccesstoken und idtoken)
au -> au: Prüfe idtoken
au -> au: erzeuge owner-accesstoken
au --> cl: HTTP 200 OK, Result body\n{"access_token"="owner-accesstoken"}
deactivate au
end
cl -> fp: GET /owner/TIHealthcareService?providedBy.id=telematikID\nAuthorization Bearer owner-accesstoken
activate fp
fp -> fp: prüfe owner-accesstoken
fp -> fd: GET /TIHealthcareService?providedBy.id=telematikID
activate fd
fd --> fp: HTTP 200 OK (Result Body json)
fp --> cl: HTTP 200 OK (Result Body json)
deactivate fd
deactivate fp
deactivate cl
@enduml
